

(define (merge l1 l2)

	(cond
		[(empty? l1) l2]
		[(empty? l2) l1]
		[else
			(if (<= (first l1) (first l2))
				(cons (first l1) (merge (rest l1) l2))
				(cons (first l2) (merge l1 (rest l2))))]))


(check-expect (merge empty empty) empty)
(check-expect (merge empty (list 1 3 5)) (list 1 3 5))
(check-expect (merge (list 0 2 4) empty) (list 0 2 4))
(check-expect (merge (list 0 2 4) (list 1 3)) (list 0 1 2 3 4))